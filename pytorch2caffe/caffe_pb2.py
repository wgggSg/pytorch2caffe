# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: caffe.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x63\x61\x66\x66\x65.proto\x12\x05\x63\x61\x66\x66\x65\"\x1c\n\tBlobShape\x12\x0f\n\x03\x64im\x18\x01 \x03(\x03\x42\x02\x10\x01\"\xcc\x01\n\tBlobProto\x12\x1f\n\x05shape\x18\x07 \x01(\x0b\x32\x10.caffe.BlobShape\x12\x10\n\x04\x64\x61ta\x18\x05 \x03(\x02\x42\x02\x10\x01\x12\x10\n\x04\x64iff\x18\x06 \x03(\x02\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_data\x18\x08 \x03(\x01\x42\x02\x10\x01\x12\x17\n\x0b\x64ouble_diff\x18\t \x03(\x01\x42\x02\x10\x01\x12\x0e\n\x03num\x18\x01 \x01(\x05:\x01\x30\x12\x13\n\x08\x63hannels\x18\x02 \x01(\x05:\x01\x30\x12\x11\n\x06height\x18\x03 \x01(\x05:\x01\x30\x12\x10\n\x05width\x18\x04 \x01(\x05:\x01\x30\"2\n\x0f\x42lobProtoVector\x12\x1f\n\x05\x62lobs\x18\x01 \x03(\x0b\x32\x10.caffe.BlobProto\"\x81\x01\n\x05\x44\x61tum\x12\x10\n\x08\x63hannels\x18\x01 \x01(\x05\x12\x0e\n\x06height\x18\x02 \x01(\x05\x12\r\n\x05width\x18\x03 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\x12\r\n\x05label\x18\x05 \x01(\x05\x12\x12\n\nfloat_data\x18\x06 \x03(\x02\x12\x16\n\x07\x65ncoded\x18\x07 \x01(\x08:\x05\x66\x61lse\"\x8a\x02\n\x0f\x46illerParameter\x12\x16\n\x04type\x18\x01 \x01(\t:\x08\x63onstant\x12\x10\n\x05value\x18\x02 \x01(\x02:\x01\x30\x12\x0e\n\x03min\x18\x03 \x01(\x02:\x01\x30\x12\x0e\n\x03max\x18\x04 \x01(\x02:\x01\x31\x12\x0f\n\x04mean\x18\x05 \x01(\x02:\x01\x30\x12\x0e\n\x03std\x18\x06 \x01(\x02:\x01\x31\x12\x12\n\x06sparse\x18\x07 \x01(\x05:\x02-1\x12\x42\n\rvariance_norm\x18\x08 \x01(\x0e\x32#.caffe.FillerParameter.VarianceNorm:\x06\x46\x41N_IN\"4\n\x0cVarianceNorm\x12\n\n\x06\x46\x41N_IN\x10\x00\x12\x0b\n\x07\x46\x41N_OUT\x10\x01\x12\x0b\n\x07\x41VERAGE\x10\x02\"\x8e\x02\n\x0cNetParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x03 \x03(\t\x12%\n\x0binput_shape\x18\x08 \x03(\x0b\x32\x10.caffe.BlobShape\x12\x11\n\tinput_dim\x18\x04 \x03(\x05\x12\x1d\n\x0e\x66orce_backward\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x05state\x18\x06 \x01(\x0b\x32\x0f.caffe.NetState\x12\x19\n\ndebug_info\x18\x07 \x01(\x08:\x05\x66\x61lse\x12$\n\x05layer\x18\x64 \x03(\x0b\x32\x15.caffe.LayerParameter\x12\'\n\x06layers\x18\x02 \x03(\x0b\x32\x17.caffe.V1LayerParameter\"\xd4\n\n\x0fSolverParameter\x12\x0b\n\x03net\x18\x18 \x01(\t\x12&\n\tnet_param\x18\x19 \x01(\x0b\x32\x13.caffe.NetParameter\x12\x11\n\ttrain_net\x18\x01 \x01(\t\x12\x10\n\x08test_net\x18\x02 \x03(\t\x12,\n\x0ftrain_net_param\x18\x15 \x01(\x0b\x32\x13.caffe.NetParameter\x12+\n\x0etest_net_param\x18\x16 \x03(\x0b\x32\x13.caffe.NetParameter\x12$\n\x0btrain_state\x18\x1a \x01(\x0b\x32\x0f.caffe.NetState\x12#\n\ntest_state\x18\x1b \x03(\x0b\x32\x0f.caffe.NetState\x12\x11\n\ttest_iter\x18\x03 \x03(\x05\x12\x18\n\rtest_interval\x18\x04 \x01(\x05:\x01\x30\x12 \n\x11test_compute_loss\x18\x13 \x01(\x08:\x05\x66\x61lse\x12!\n\x13test_initialization\x18  \x01(\x08:\x04true\x12\x0f\n\x07\x62\x61se_lr\x18\x05 \x01(\x02\x12\x0f\n\x07\x64isplay\x18\x06 \x01(\x05\x12\x17\n\x0c\x61verage_loss\x18! \x01(\x05:\x01\x31\x12\x10\n\x08max_iter\x18\x07 \x01(\x05\x12\x14\n\titer_size\x18$ \x01(\x05:\x01\x31\x12\x11\n\tlr_policy\x18\x08 \x01(\t\x12\r\n\x05gamma\x18\t \x01(\x02\x12\r\n\x05power\x18\n \x01(\x02\x12\x10\n\x08momentum\x18\x0b \x01(\x02\x12\x14\n\x0cweight_decay\x18\x0c \x01(\x02\x12\x1f\n\x13regularization_type\x18\x1d \x01(\t:\x02L2\x12\x10\n\x08stepsize\x18\r \x01(\x05\x12\x11\n\tstepvalue\x18\" \x03(\x05\x12\x1a\n\x0e\x63lip_gradients\x18# \x01(\x02:\x02-1\x12\x13\n\x08snapshot\x18\x0e \x01(\x05:\x01\x30\x12\x17\n\x0fsnapshot_prefix\x18\x0f \x01(\t\x12\x1c\n\rsnapshot_diff\x18\x10 \x01(\x08:\x05\x66\x61lse\x12K\n\x0fsnapshot_format\x18% \x01(\x0e\x32%.caffe.SolverParameter.SnapshotFormat:\x0b\x42INARYPROTO\x12;\n\x0bsolver_mode\x18\x11 \x01(\x0e\x32!.caffe.SolverParameter.SolverMode:\x03GPU\x12\x14\n\tdevice_id\x18\x12 \x01(\x05:\x01\x30\x12\x17\n\x0brandom_seed\x18\x14 \x01(\x03:\x02-1\x12\x11\n\x04type\x18( \x01(\t:\x03SGD\x12\x14\n\x05\x64\x65lta\x18\x1f \x01(\x02:\x05\x31\x65-08\x12\x18\n\tmomentum2\x18\' \x01(\x02:\x05\x30.999\x12\x17\n\trms_decay\x18& \x01(\x02:\x04\x30.99\x12\x19\n\ndebug_info\x18\x17 \x01(\x08:\x05\x66\x61lse\x12\"\n\x14snapshot_after_train\x18\x1c \x01(\x08:\x04true\x12;\n\x0bsolver_type\x18\x1e \x01(\x0e\x32!.caffe.SolverParameter.SolverType:\x03SGD\x12\x1f\n\x11layer_wise_reduce\x18) \x01(\x08:\x04true\x12\x0f\n\x07weights\x18* \x03(\t\"+\n\x0eSnapshotFormat\x12\x08\n\x04HDF5\x10\x00\x12\x0f\n\x0b\x42INARYPROTO\x10\x01\"\x1e\n\nSolverMode\x12\x07\n\x03\x43PU\x10\x00\x12\x07\n\x03GPU\x10\x01\"U\n\nSolverType\x12\x07\n\x03SGD\x10\x00\x12\x0c\n\x08NESTEROV\x10\x01\x12\x0b\n\x07\x41\x44\x41GRAD\x10\x02\x12\x0b\n\x07RMSPROP\x10\x03\x12\x0c\n\x08\x41\x44\x41\x44\x45LTA\x10\x04\x12\x08\n\x04\x41\x44\x41M\x10\x05\"l\n\x0bSolverState\x12\x0c\n\x04iter\x18\x01 \x01(\x05\x12\x13\n\x0blearned_net\x18\x02 \x01(\t\x12!\n\x07history\x18\x03 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x17\n\x0c\x63urrent_step\x18\x04 \x01(\x05:\x01\x30\"N\n\x08NetState\x12!\n\x05phase\x18\x01 \x01(\x0e\x32\x0c.caffe.Phase:\x04TEST\x12\x10\n\x05level\x18\x02 \x01(\x05:\x01\x30\x12\r\n\x05stage\x18\x03 \x03(\t\"s\n\x0cNetStateRule\x12\x1b\n\x05phase\x18\x01 \x01(\x0e\x32\x0c.caffe.Phase\x12\x11\n\tmin_level\x18\x02 \x01(\x05\x12\x11\n\tmax_level\x18\x03 \x01(\x05\x12\r\n\x05stage\x18\x04 \x03(\t\x12\x11\n\tnot_stage\x18\x05 \x03(\t\"\xa3\x01\n\tParamSpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x31\n\nshare_mode\x18\x02 \x01(\x0e\x32\x1d.caffe.ParamSpec.DimCheckMode\x12\x12\n\x07lr_mult\x18\x03 \x01(\x02:\x01\x31\x12\x15\n\ndecay_mult\x18\x04 \x01(\x02:\x01\x31\"*\n\x0c\x44imCheckMode\x12\n\n\x06STRICT\x10\x00\x12\x0e\n\nPERMISSIVE\x10\x01\"\xbe\x15\n\x0eLayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0e\n\x06\x62ottom\x18\x03 \x03(\t\x12\x0b\n\x03top\x18\x04 \x03(\t\x12\x1b\n\x05phase\x18\n \x01(\x0e\x32\x0c.caffe.Phase\x12\x13\n\x0bloss_weight\x18\x05 \x03(\x02\x12\x1f\n\x05param\x18\x06 \x03(\x0b\x32\x10.caffe.ParamSpec\x12\x1f\n\x05\x62lobs\x18\x07 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x16\n\x0epropagate_down\x18\x0b \x03(\x08\x12$\n\x07include\x18\x08 \x03(\x0b\x32\x13.caffe.NetStateRule\x12$\n\x07\x65xclude\x18\t \x03(\x0b\x32\x13.caffe.NetStateRule\x12\x37\n\x0ftransform_param\x18\x64 \x01(\x0b\x32\x1e.caffe.TransformationParameter\x12(\n\nloss_param\x18\x65 \x01(\x0b\x32\x14.caffe.LossParameter\x12\x30\n\x0e\x61\x63\x63uracy_param\x18\x66 \x01(\x0b\x32\x18.caffe.AccuracyParameter\x12,\n\x0c\x61rgmax_param\x18g \x01(\x0b\x32\x16.caffe.ArgMaxParameter\x12\x34\n\x10\x62\x61tch_norm_param\x18\x8b\x01 \x01(\x0b\x32\x19.caffe.BatchNormParameter\x12)\n\nbias_param\x18\x8d\x01 \x01(\x0b\x32\x14.caffe.BiasParameter\x12)\n\nclip_param\x18\x94\x01 \x01(\x0b\x32\x14.caffe.ClipParameter\x12,\n\x0c\x63oncat_param\x18h \x01(\x0b\x32\x16.caffe.ConcatParameter\x12?\n\x16\x63ontrastive_loss_param\x18i \x01(\x0b\x32\x1f.caffe.ContrastiveLossParameter\x12\x36\n\x11\x63onvolution_param\x18j \x01(\x0b\x32\x1b.caffe.ConvolutionParameter\x12)\n\ncrop_param\x18\x90\x01 \x01(\x0b\x32\x14.caffe.CropParameter\x12(\n\ndata_param\x18k \x01(\x0b\x32\x14.caffe.DataParameter\x12.\n\rdropout_param\x18l \x01(\x0b\x32\x17.caffe.DropoutParameter\x12\x33\n\x10\x64ummy_data_param\x18m \x01(\x0b\x32\x19.caffe.DummyDataParameter\x12.\n\reltwise_param\x18n \x01(\x0b\x32\x17.caffe.EltwiseParameter\x12\'\n\telu_param\x18\x8c\x01 \x01(\x0b\x32\x13.caffe.ELUParameter\x12+\n\x0b\x65mbed_param\x18\x89\x01 \x01(\x0b\x32\x15.caffe.EmbedParameter\x12&\n\texp_param\x18o \x01(\x0b\x32\x13.caffe.ExpParameter\x12/\n\rflatten_param\x18\x87\x01 \x01(\x0b\x32\x17.caffe.FlattenParameter\x12\x31\n\x0fhdf5_data_param\x18p \x01(\x0b\x32\x18.caffe.HDF5DataParameter\x12\x35\n\x11hdf5_output_param\x18q \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\x12\x33\n\x10hinge_loss_param\x18r \x01(\x0b\x32\x19.caffe.HingeLossParameter\x12\x33\n\x10image_data_param\x18s \x01(\x0b\x32\x19.caffe.ImageDataParameter\x12\x39\n\x13infogain_loss_param\x18t \x01(\x0b\x32\x1c.caffe.InfogainLossParameter\x12\x39\n\x13inner_product_param\x18u \x01(\x0b\x32\x1c.caffe.InnerProductParameter\x12+\n\x0binput_param\x18\x8f\x01 \x01(\x0b\x32\x15.caffe.InputParameter\x12\'\n\tlog_param\x18\x86\x01 \x01(\x0b\x32\x13.caffe.LogParameter\x12&\n\tlrn_param\x18v \x01(\x0b\x32\x13.caffe.LRNParameter\x12\x35\n\x11memory_data_param\x18w \x01(\x0b\x32\x1a.caffe.MemoryDataParameter\x12&\n\tmvn_param\x18x \x01(\x0b\x32\x13.caffe.MVNParameter\x12\x33\n\x0fparameter_param\x18\x91\x01 \x01(\x0b\x32\x19.caffe.ParameterParameter\x12.\n\rpooling_param\x18y \x01(\x0b\x32\x17.caffe.PoolingParameter\x12*\n\x0bpower_param\x18z \x01(\x0b\x32\x15.caffe.PowerParameter\x12+\n\x0bprelu_param\x18\x83\x01 \x01(\x0b\x32\x15.caffe.PReLUParameter\x12-\n\x0cpython_param\x18\x82\x01 \x01(\x0b\x32\x16.caffe.PythonParameter\x12\x33\n\x0frecurrent_param\x18\x92\x01 \x01(\x0b\x32\x19.caffe.RecurrentParameter\x12\x33\n\x0freduction_param\x18\x88\x01 \x01(\x0b\x32\x19.caffe.ReductionParameter\x12(\n\nrelu_param\x18{ \x01(\x0b\x32\x14.caffe.ReLUParameter\x12/\n\rreshape_param\x18\x85\x01 \x01(\x0b\x32\x17.caffe.ReshapeParameter\x12+\n\x0bscale_param\x18\x8e\x01 \x01(\x0b\x32\x15.caffe.ScaleParameter\x12.\n\rsigmoid_param\x18| \x01(\x0b\x32\x17.caffe.SigmoidParameter\x12.\n\rsoftmax_param\x18} \x01(\x0b\x32\x17.caffe.SoftmaxParameter\x12\'\n\tspp_param\x18\x84\x01 \x01(\x0b\x32\x13.caffe.SPPParameter\x12*\n\x0bslice_param\x18~ \x01(\x0b\x32\x15.caffe.SliceParameter\x12+\n\x0bswish_param\x18\x93\x01 \x01(\x0b\x32\x15.caffe.SwishParameter\x12(\n\ntanh_param\x18\x7f \x01(\x0b\x32\x14.caffe.TanHParameter\x12\x33\n\x0fthreshold_param\x18\x80\x01 \x01(\x0b\x32\x19.caffe.ThresholdParameter\x12)\n\ntile_param\x18\x8a\x01 \x01(\x0b\x32\x14.caffe.TileParameter\x12\x36\n\x11window_data_param\x18\x81\x01 \x01(\x0b\x32\x1a.caffe.WindowDataParameter\x12/\n\rpermute_param\x18\x96\x01 \x01(\x0b\x32\x17.caffe.PermuteParameter\x12\x31\n\x0eupsample_param\x18\x97\x01 \x01(\x0b\x32\x18.caffe.UpsampleParameter\"\xb6\x01\n\x17TransformationParameter\x12\x10\n\x05scale\x18\x01 \x01(\x02:\x01\x31\x12\x15\n\x06mirror\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x14\n\tcrop_size\x18\x03 \x01(\r:\x01\x30\x12\x11\n\tmean_file\x18\x04 \x01(\t\x12\x12\n\nmean_value\x18\x05 \x03(\x02\x12\x1a\n\x0b\x66orce_color\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x19\n\nforce_gray\x18\x07 \x01(\x08:\x05\x66\x61lse\"\xc2\x01\n\rLossParameter\x12\x14\n\x0cignore_label\x18\x01 \x01(\x05\x12\x44\n\rnormalization\x18\x03 \x01(\x0e\x32&.caffe.LossParameter.NormalizationMode:\x05VALID\x12\x11\n\tnormalize\x18\x02 \x01(\x08\"B\n\x11NormalizationMode\x12\x08\n\x04\x46ULL\x10\x00\x12\t\n\x05VALID\x10\x01\x12\x0e\n\nBATCH_SIZE\x10\x02\x12\x08\n\x04NONE\x10\x03\"L\n\x11\x41\x63\x63uracyParameter\x12\x10\n\x05top_k\x18\x01 \x01(\r:\x01\x31\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\x12\x14\n\x0cignore_label\x18\x03 \x01(\x05\"M\n\x0f\x41rgMaxParameter\x12\x1a\n\x0bout_max_val\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x10\n\x05top_k\x18\x02 \x01(\r:\x01\x31\x12\x0c\n\x04\x61xis\x18\x03 \x01(\x05\")\n\rClipParameter\x12\x0b\n\x03min\x18\x01 \x02(\x02\x12\x0b\n\x03max\x18\x02 \x02(\x02\"9\n\x0f\x43oncatParameter\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\x12\x15\n\nconcat_dim\x18\x01 \x01(\r:\x01\x31\"j\n\x12\x42\x61tchNormParameter\x12\x18\n\x10use_global_stats\x18\x01 \x01(\x08\x12&\n\x17moving_average_fraction\x18\x02 \x01(\x02:\x05\x30.999\x12\x12\n\x03\x65ps\x18\x03 \x01(\x02:\x05\x31\x65-05\"]\n\rBiasParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x13\n\x08num_axes\x18\x02 \x01(\x05:\x01\x31\x12&\n\x06\x66iller\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\"L\n\x18\x43ontrastiveLossParameter\x12\x11\n\x06margin\x18\x01 \x01(\x02:\x01\x31\x12\x1d\n\x0elegacy_version\x18\x02 \x01(\x08:\x05\x66\x61lse\"\xfc\x03\n\x14\x43onvolutionParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x17\n\tbias_term\x18\x02 \x01(\x08:\x04true\x12\x0b\n\x03pad\x18\x03 \x03(\r\x12\x13\n\x0bkernel_size\x18\x04 \x03(\r\x12\x0e\n\x06stride\x18\x06 \x03(\r\x12\x10\n\x08\x64ilation\x18\x12 \x03(\r\x12\x10\n\x05pad_h\x18\t \x01(\r:\x01\x30\x12\x10\n\x05pad_w\x18\n \x01(\r:\x01\x30\x12\x10\n\x08kernel_h\x18\x0b \x01(\r\x12\x10\n\x08kernel_w\x18\x0c \x01(\r\x12\x10\n\x08stride_h\x18\r \x01(\r\x12\x10\n\x08stride_w\x18\x0e \x01(\r\x12\x10\n\x05group\x18\x05 \x01(\r:\x01\x31\x12-\n\rweight_filler\x18\x07 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x08 \x01(\x0b\x32\x16.caffe.FillerParameter\x12;\n\x06\x65ngine\x18\x0f \x01(\x0e\x32\".caffe.ConvolutionParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x0f\n\x04\x61xis\x18\x10 \x01(\x05:\x01\x31\x12\x1e\n\x0f\x66orce_nd_im2col\x18\x11 \x01(\x08:\x05\x66\x61lse\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"0\n\rCropParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x32\x12\x0e\n\x06offset\x18\x02 \x03(\r\"\xa4\x02\n\rDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x12\n\nbatch_size\x18\x04 \x01(\r\x12\x14\n\trand_skip\x18\x07 \x01(\r:\x01\x30\x12\x31\n\x07\x62\x61\x63kend\x18\x08 \x01(\x0e\x32\x17.caffe.DataParameter.DB:\x07LEVELDB\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\"\n\x13\x66orce_encoded_color\x18\t \x01(\x08:\x05\x66\x61lse\x12\x13\n\x08prefetch\x18\n \x01(\r:\x01\x34\"\x1b\n\x02\x44\x42\x12\x0b\n\x07LEVELDB\x10\x00\x12\x08\n\x04LMDB\x10\x01\".\n\x10\x44ropoutParameter\x12\x1a\n\rdropout_ratio\x18\x01 \x01(\x02:\x03\x30.5\"\xa0\x01\n\x12\x44ummyDataParameter\x12+\n\x0b\x64\x61ta_filler\x18\x01 \x03(\x0b\x32\x16.caffe.FillerParameter\x12\x1f\n\x05shape\x18\x06 \x03(\x0b\x32\x10.caffe.BlobShape\x12\x0b\n\x03num\x18\x02 \x03(\r\x12\x10\n\x08\x63hannels\x18\x03 \x03(\r\x12\x0e\n\x06height\x18\x04 \x03(\r\x12\r\n\x05width\x18\x05 \x03(\r\"\xa5\x01\n\x10\x45ltwiseParameter\x12\x39\n\toperation\x18\x01 \x01(\x0e\x32!.caffe.EltwiseParameter.EltwiseOp:\x03SUM\x12\r\n\x05\x63oeff\x18\x02 \x03(\x02\x12\x1e\n\x10stable_prod_grad\x18\x03 \x01(\x08:\x04true\"\'\n\tEltwiseOp\x12\x08\n\x04PROD\x10\x00\x12\x07\n\x03SUM\x10\x01\x12\x07\n\x03MAX\x10\x02\" \n\x0c\x45LUParameter\x12\x10\n\x05\x61lpha\x18\x01 \x01(\x02:\x01\x31\"\xac\x01\n\x0e\x45mbedParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x11\n\tinput_dim\x18\x02 \x01(\r\x12\x17\n\tbias_term\x18\x03 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x04 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\"D\n\x0c\x45xpParameter\x12\x10\n\x04\x62\x61se\x18\x01 \x01(\x02:\x02-1\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30\"9\n\x10\x46lattenParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x14\n\x08\x65nd_axis\x18\x02 \x01(\x05:\x02-1\"O\n\x11HDF5DataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x12\n\nbatch_size\x18\x02 \x01(\r\x12\x16\n\x07shuffle\x18\x03 \x01(\x08:\x05\x66\x61lse\"(\n\x13HDF5OutputParameter\x12\x11\n\tfile_name\x18\x01 \x01(\t\"^\n\x12HingeLossParameter\x12\x30\n\x04norm\x18\x01 \x01(\x0e\x32\x1e.caffe.HingeLossParameter.Norm:\x02L1\"\x16\n\x04Norm\x12\x06\n\x02L1\x10\x01\x12\x06\n\x02L2\x10\x02\"\x97\x02\n\x12ImageDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x15\n\nbatch_size\x18\x04 \x01(\r:\x01\x31\x12\x14\n\trand_skip\x18\x07 \x01(\r:\x01\x30\x12\x16\n\x07shuffle\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x15\n\nnew_height\x18\t \x01(\r:\x01\x30\x12\x14\n\tnew_width\x18\n \x01(\r:\x01\x30\x12\x16\n\x08is_color\x18\x0b \x01(\x08:\x04true\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x15\n\x0broot_folder\x18\x0c \x01(\t:\x00\"8\n\x15InfogainLossParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\"\xcb\x01\n\x15InnerProductParameter\x12\x12\n\nnum_output\x18\x01 \x01(\r\x12\x17\n\tbias_term\x18\x02 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x04 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x0f\n\x04\x61xis\x18\x05 \x01(\x05:\x01\x31\x12\x18\n\ttranspose\x18\x06 \x01(\x08:\x05\x66\x61lse\"1\n\x0eInputParameter\x12\x1f\n\x05shape\x18\x01 \x03(\x0b\x32\x10.caffe.BlobShape\"D\n\x0cLogParameter\x12\x10\n\x04\x62\x61se\x18\x01 \x01(\x02:\x02-1\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30\"\xb8\x02\n\x0cLRNParameter\x12\x15\n\nlocal_size\x18\x01 \x01(\r:\x01\x35\x12\x10\n\x05\x61lpha\x18\x02 \x01(\x02:\x01\x31\x12\x12\n\x04\x62\x65ta\x18\x03 \x01(\x02:\x04\x30.75\x12\x44\n\x0bnorm_region\x18\x04 \x01(\x0e\x32\x1e.caffe.LRNParameter.NormRegion:\x0f\x41\x43ROSS_CHANNELS\x12\x0c\n\x01k\x18\x05 \x01(\x02:\x01\x31\x12\x33\n\x06\x65ngine\x18\x06 \x01(\x0e\x32\x1a.caffe.LRNParameter.Engine:\x07\x44\x45\x46\x41ULT\"5\n\nNormRegion\x12\x13\n\x0f\x41\x43ROSS_CHANNELS\x10\x00\x12\x12\n\x0eWITHIN_CHANNEL\x10\x01\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"Z\n\x13MemoryDataParameter\x12\x12\n\nbatch_size\x18\x01 \x01(\r\x12\x10\n\x08\x63hannels\x18\x02 \x01(\r\x12\x0e\n\x06height\x18\x03 \x01(\r\x12\r\n\x05width\x18\x04 \x01(\r\"d\n\x0cMVNParameter\x12 \n\x12normalize_variance\x18\x01 \x01(\x08:\x04true\x12\x1e\n\x0f\x61\x63ross_channels\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x12\n\x03\x65ps\x18\x03 \x01(\x02:\x05\x31\x65-09\"5\n\x12ParameterParameter\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.caffe.BlobShape\"\x81\x04\n\x10PoolingParameter\x12\x35\n\x04pool\x18\x01 \x01(\x0e\x32\".caffe.PoolingParameter.PoolMethod:\x03MAX\x12\x0e\n\x03pad\x18\x04 \x01(\r:\x01\x30\x12\x10\n\x05pad_h\x18\t \x01(\r:\x01\x30\x12\x10\n\x05pad_w\x18\n \x01(\r:\x01\x30\x12\x13\n\x0bkernel_size\x18\x02 \x01(\r\x12\x10\n\x08kernel_h\x18\x05 \x01(\r\x12\x10\n\x08kernel_w\x18\x06 \x01(\r\x12\x11\n\x06stride\x18\x03 \x01(\r:\x01\x31\x12\x10\n\x08stride_h\x18\x07 \x01(\r\x12\x10\n\x08stride_w\x18\x08 \x01(\r\x12\x37\n\x06\x65ngine\x18\x0b \x01(\x0e\x32\x1e.caffe.PoolingParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x1d\n\x0eglobal_pooling\x18\x0c \x01(\x08:\x05\x66\x61lse\x12;\n\nround_mode\x18\r \x01(\x0e\x32!.caffe.PoolingParameter.RoundMode:\x04\x43\x45IL\".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\" \n\tRoundMode\x12\x08\n\x04\x43\x45IL\x10\x00\x12\t\n\x05\x46LOOR\x10\x01\"F\n\x0ePowerParameter\x12\x10\n\x05power\x18\x01 \x01(\x02:\x01\x31\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x10\n\x05shift\x18\x03 \x01(\x02:\x01\x30\"g\n\x0fPythonParameter\x12\x0e\n\x06module\x18\x01 \x01(\t\x12\r\n\x05layer\x18\x02 \x01(\t\x12\x13\n\tparam_str\x18\x03 \x01(\t:\x00\x12 \n\x11share_in_parallel\x18\x04 \x01(\x08:\x05\x66\x61lse\"\xc0\x01\n\x12RecurrentParameter\x12\x15\n\nnum_output\x18\x01 \x01(\r:\x01\x30\x12-\n\rweight_filler\x18\x02 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x19\n\ndebug_info\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rexpose_hidden\x18\x05 \x01(\x08:\x05\x66\x61lse\"\xad\x01\n\x12ReductionParameter\x12=\n\toperation\x18\x01 \x01(\x0e\x32%.caffe.ReductionParameter.ReductionOp:\x03SUM\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x30\x12\x10\n\x05\x63oeff\x18\x03 \x01(\x02:\x01\x31\"5\n\x0bReductionOp\x12\x07\n\x03SUM\x10\x01\x12\x08\n\x04\x41SUM\x10\x02\x12\t\n\x05SUMSQ\x10\x03\x12\x08\n\x04MEAN\x10\x04\"\x8d\x01\n\rReLUParameter\x12\x19\n\x0enegative_slope\x18\x01 \x01(\x02:\x01\x30\x12\x34\n\x06\x65ngine\x18\x02 \x01(\x0e\x32\x1b.caffe.ReLUParameter.Engine:\x07\x44\x45\x46\x41ULT\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"Z\n\x10ReshapeParameter\x12\x1f\n\x05shape\x18\x01 \x01(\x0b\x32\x10.caffe.BlobShape\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x30\x12\x14\n\x08num_axes\x18\x03 \x01(\x05:\x02-1\"\xa5\x01\n\x0eScaleParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\x13\n\x08num_axes\x18\x02 \x01(\x05:\x01\x31\x12&\n\x06\x66iller\x18\x03 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x18\n\tbias_term\x18\x04 \x01(\x08:\x05\x66\x61lse\x12+\n\x0b\x62ias_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\"x\n\x10SigmoidParameter\x12\x37\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1e.caffe.SigmoidParameter.Engine:\x07\x44\x45\x46\x41ULT\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"L\n\x0eSliceParameter\x12\x0f\n\x04\x61xis\x18\x03 \x01(\x05:\x01\x31\x12\x13\n\x0bslice_point\x18\x02 \x03(\r\x12\x14\n\tslice_dim\x18\x01 \x01(\r:\x01\x31\"\x89\x01\n\x10SoftmaxParameter\x12\x37\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1e.caffe.SoftmaxParameter.Engine:\x07\x44\x45\x46\x41ULT\x12\x0f\n\x04\x61xis\x18\x02 \x01(\x05:\x01\x31\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"!\n\x0eSwishParameter\x12\x0f\n\x04\x62\x65ta\x18\x01 \x01(\x02:\x01\x31\"r\n\rTanHParameter\x12\x34\n\x06\x65ngine\x18\x01 \x01(\x0e\x32\x1b.caffe.TanHParameter.Engine:\x07\x44\x45\x46\x41ULT\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"/\n\rTileParameter\x12\x0f\n\x04\x61xis\x18\x01 \x01(\x05:\x01\x31\x12\r\n\x05tiles\x18\x02 \x01(\x05\"*\n\x12ThresholdParameter\x12\x14\n\tthreshold\x18\x01 \x01(\x02:\x01\x30\"\xc1\x02\n\x13WindowDataParameter\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x10\n\x05scale\x18\x02 \x01(\x02:\x01\x31\x12\x11\n\tmean_file\x18\x03 \x01(\t\x12\x12\n\nbatch_size\x18\x04 \x01(\r\x12\x14\n\tcrop_size\x18\x05 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x19\n\x0c\x66g_threshold\x18\x07 \x01(\x02:\x03\x30.5\x12\x19\n\x0c\x62g_threshold\x18\x08 \x01(\x02:\x03\x30.5\x12\x19\n\x0b\x66g_fraction\x18\t \x01(\x02:\x04\x30.25\x12\x16\n\x0b\x63ontext_pad\x18\n \x01(\r:\x01\x30\x12\x17\n\tcrop_mode\x18\x0b \x01(\t:\x04warp\x12\x1b\n\x0c\x63\x61\x63he_images\x18\x0c \x01(\x08:\x05\x66\x61lse\x12\x15\n\x0broot_folder\x18\r \x01(\t:\x00\"\xeb\x01\n\x0cSPPParameter\x12\x16\n\x0epyramid_height\x18\x01 \x01(\r\x12\x31\n\x04pool\x18\x02 \x01(\x0e\x32\x1e.caffe.SPPParameter.PoolMethod:\x03MAX\x12\x33\n\x06\x65ngine\x18\x06 \x01(\x0e\x32\x1a.caffe.SPPParameter.Engine:\x07\x44\x45\x46\x41ULT\".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02\"+\n\x06\x45ngine\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\t\n\x05\x43\x41\x46\x46\x45\x10\x01\x12\t\n\x05\x43UDNN\x10\x02\"\xe0\x13\n\x10V1LayerParameter\x12\x0e\n\x06\x62ottom\x18\x02 \x03(\t\x12\x0b\n\x03top\x18\x03 \x03(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12$\n\x07include\x18  \x03(\x0b\x32\x13.caffe.NetStateRule\x12$\n\x07\x65xclude\x18! \x03(\x0b\x32\x13.caffe.NetStateRule\x12/\n\x04type\x18\x05 \x01(\x0e\x32!.caffe.V1LayerParameter.LayerType\x12\x1f\n\x05\x62lobs\x18\x06 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x0e\n\x05param\x18\xe9\x07 \x03(\t\x12>\n\x0f\x62lob_share_mode\x18\xea\x07 \x03(\x0e\x32$.caffe.V1LayerParameter.DimCheckMode\x12\x10\n\x08\x62lobs_lr\x18\x07 \x03(\x02\x12\x14\n\x0cweight_decay\x18\x08 \x03(\x02\x12\x13\n\x0bloss_weight\x18# \x03(\x02\x12\x30\n\x0e\x61\x63\x63uracy_param\x18\x1b \x01(\x0b\x32\x18.caffe.AccuracyParameter\x12,\n\x0c\x61rgmax_param\x18\x17 \x01(\x0b\x32\x16.caffe.ArgMaxParameter\x12,\n\x0c\x63oncat_param\x18\t \x01(\x0b\x32\x16.caffe.ConcatParameter\x12?\n\x16\x63ontrastive_loss_param\x18( \x01(\x0b\x32\x1f.caffe.ContrastiveLossParameter\x12\x36\n\x11\x63onvolution_param\x18\n \x01(\x0b\x32\x1b.caffe.ConvolutionParameter\x12(\n\ndata_param\x18\x0b \x01(\x0b\x32\x14.caffe.DataParameter\x12.\n\rdropout_param\x18\x0c \x01(\x0b\x32\x17.caffe.DropoutParameter\x12\x33\n\x10\x64ummy_data_param\x18\x1a \x01(\x0b\x32\x19.caffe.DummyDataParameter\x12.\n\reltwise_param\x18\x18 \x01(\x0b\x32\x17.caffe.EltwiseParameter\x12&\n\texp_param\x18) \x01(\x0b\x32\x13.caffe.ExpParameter\x12\x31\n\x0fhdf5_data_param\x18\r \x01(\x0b\x32\x18.caffe.HDF5DataParameter\x12\x35\n\x11hdf5_output_param\x18\x0e \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\x12\x33\n\x10hinge_loss_param\x18\x1d \x01(\x0b\x32\x19.caffe.HingeLossParameter\x12\x33\n\x10image_data_param\x18\x0f \x01(\x0b\x32\x19.caffe.ImageDataParameter\x12\x39\n\x13infogain_loss_param\x18\x10 \x01(\x0b\x32\x1c.caffe.InfogainLossParameter\x12\x39\n\x13inner_product_param\x18\x11 \x01(\x0b\x32\x1c.caffe.InnerProductParameter\x12&\n\tlrn_param\x18\x12 \x01(\x0b\x32\x13.caffe.LRNParameter\x12\x35\n\x11memory_data_param\x18\x16 \x01(\x0b\x32\x1a.caffe.MemoryDataParameter\x12&\n\tmvn_param\x18\" \x01(\x0b\x32\x13.caffe.MVNParameter\x12.\n\rpooling_param\x18\x13 \x01(\x0b\x32\x17.caffe.PoolingParameter\x12*\n\x0bpower_param\x18\x15 \x01(\x0b\x32\x15.caffe.PowerParameter\x12(\n\nrelu_param\x18\x1e \x01(\x0b\x32\x14.caffe.ReLUParameter\x12.\n\rsigmoid_param\x18& \x01(\x0b\x32\x17.caffe.SigmoidParameter\x12.\n\rsoftmax_param\x18\' \x01(\x0b\x32\x17.caffe.SoftmaxParameter\x12*\n\x0bslice_param\x18\x1f \x01(\x0b\x32\x15.caffe.SliceParameter\x12(\n\ntanh_param\x18% \x01(\x0b\x32\x14.caffe.TanHParameter\x12\x32\n\x0fthreshold_param\x18\x19 \x01(\x0b\x32\x19.caffe.ThresholdParameter\x12\x35\n\x11window_data_param\x18\x14 \x01(\x0b\x32\x1a.caffe.WindowDataParameter\x12\x37\n\x0ftransform_param\x18$ \x01(\x0b\x32\x1e.caffe.TransformationParameter\x12(\n\nloss_param\x18* \x01(\x0b\x32\x14.caffe.LossParameter\x12&\n\x05layer\x18\x01 \x01(\x0b\x32\x17.caffe.V0LayerParameter\"\xd8\x04\n\tLayerType\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06\x41\x42SVAL\x10#\x12\x0c\n\x08\x41\x43\x43URACY\x10\x01\x12\n\n\x06\x41RGMAX\x10\x1e\x12\x08\n\x04\x42NLL\x10\x02\x12\n\n\x06\x43ONCAT\x10\x03\x12\x14\n\x10\x43ONTRASTIVE_LOSS\x10%\x12\x0f\n\x0b\x43ONVOLUTION\x10\x04\x12\x08\n\x04\x44\x41TA\x10\x05\x12\x11\n\rDECONVOLUTION\x10\'\x12\x0b\n\x07\x44ROPOUT\x10\x06\x12\x0e\n\nDUMMY_DATA\x10 \x12\x12\n\x0e\x45UCLIDEAN_LOSS\x10\x07\x12\x0b\n\x07\x45LTWISE\x10\x19\x12\x07\n\x03\x45XP\x10&\x12\x0b\n\x07\x46LATTEN\x10\x08\x12\r\n\tHDF5_DATA\x10\t\x12\x0f\n\x0bHDF5_OUTPUT\x10\n\x12\x0e\n\nHINGE_LOSS\x10\x1c\x12\n\n\x06IM2COL\x10\x0b\x12\x0e\n\nIMAGE_DATA\x10\x0c\x12\x11\n\rINFOGAIN_LOSS\x10\r\x12\x11\n\rINNER_PRODUCT\x10\x0e\x12\x07\n\x03LRN\x10\x0f\x12\x0f\n\x0bMEMORY_DATA\x10\x1d\x12\x1d\n\x19MULTINOMIAL_LOGISTIC_LOSS\x10\x10\x12\x07\n\x03MVN\x10\"\x12\x0b\n\x07POOLING\x10\x11\x12\t\n\x05POWER\x10\x1a\x12\x08\n\x04RELU\x10\x12\x12\x0b\n\x07SIGMOID\x10\x13\x12\x1e\n\x1aSIGMOID_CROSS_ENTROPY_LOSS\x10\x1b\x12\x0b\n\x07SILENCE\x10$\x12\x0b\n\x07SOFTMAX\x10\x14\x12\x10\n\x0cSOFTMAX_LOSS\x10\x15\x12\t\n\x05SPLIT\x10\x16\x12\t\n\x05SLICE\x10!\x12\x08\n\x04TANH\x10\x17\x12\x0f\n\x0bWINDOW_DATA\x10\x18\x12\r\n\tTHRESHOLD\x10\x1f\"*\n\x0c\x44imCheckMode\x12\n\n\x06STRICT\x10\x00\x12\x0e\n\nPERMISSIVE\x10\x01\"\xfd\x07\n\x10V0LayerParameter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x12\n\nnum_output\x18\x03 \x01(\r\x12\x16\n\x08\x62iasterm\x18\x04 \x01(\x08:\x04true\x12-\n\rweight_filler\x18\x05 \x01(\x0b\x32\x16.caffe.FillerParameter\x12+\n\x0b\x62ias_filler\x18\x06 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x0e\n\x03pad\x18\x07 \x01(\r:\x01\x30\x12\x12\n\nkernelsize\x18\x08 \x01(\r\x12\x10\n\x05group\x18\t \x01(\r:\x01\x31\x12\x11\n\x06stride\x18\n \x01(\r:\x01\x31\x12\x35\n\x04pool\x18\x0b \x01(\x0e\x32\".caffe.V0LayerParameter.PoolMethod:\x03MAX\x12\x1a\n\rdropout_ratio\x18\x0c \x01(\x02:\x03\x30.5\x12\x15\n\nlocal_size\x18\r \x01(\r:\x01\x35\x12\x10\n\x05\x61lpha\x18\x0e \x01(\x02:\x01\x31\x12\x12\n\x04\x62\x65ta\x18\x0f \x01(\x02:\x04\x30.75\x12\x0c\n\x01k\x18\x16 \x01(\x02:\x01\x31\x12\x0e\n\x06source\x18\x10 \x01(\t\x12\x10\n\x05scale\x18\x11 \x01(\x02:\x01\x31\x12\x10\n\x08meanfile\x18\x12 \x01(\t\x12\x11\n\tbatchsize\x18\x13 \x01(\r\x12\x13\n\x08\x63ropsize\x18\x14 \x01(\r:\x01\x30\x12\x15\n\x06mirror\x18\x15 \x01(\x08:\x05\x66\x61lse\x12\x1f\n\x05\x62lobs\x18\x32 \x03(\x0b\x32\x10.caffe.BlobProto\x12\x10\n\x08\x62lobs_lr\x18\x33 \x03(\x02\x12\x14\n\x0cweight_decay\x18\x34 \x03(\x02\x12\x14\n\trand_skip\x18\x35 \x01(\r:\x01\x30\x12\x1d\n\x10\x64\x65t_fg_threshold\x18\x36 \x01(\x02:\x03\x30.5\x12\x1d\n\x10\x64\x65t_bg_threshold\x18\x37 \x01(\x02:\x03\x30.5\x12\x1d\n\x0f\x64\x65t_fg_fraction\x18\x38 \x01(\x02:\x04\x30.25\x12\x1a\n\x0f\x64\x65t_context_pad\x18: \x01(\r:\x01\x30\x12\x1b\n\rdet_crop_mode\x18; \x01(\t:\x04warp\x12\x12\n\x07new_num\x18< \x01(\x05:\x01\x30\x12\x17\n\x0cnew_channels\x18= \x01(\x05:\x01\x30\x12\x15\n\nnew_height\x18> \x01(\x05:\x01\x30\x12\x14\n\tnew_width\x18? \x01(\x05:\x01\x30\x12\x1d\n\x0eshuffle_images\x18@ \x01(\x08:\x05\x66\x61lse\x12\x15\n\nconcat_dim\x18\x41 \x01(\r:\x01\x31\x12\x36\n\x11hdf5_output_param\x18\xe9\x07 \x01(\x0b\x32\x1a.caffe.HDF5OutputParameter\".\n\nPoolMethod\x12\x07\n\x03MAX\x10\x00\x12\x07\n\x03\x41VE\x10\x01\x12\x0e\n\nSTOCHASTIC\x10\x02\"W\n\x0ePReLUParameter\x12&\n\x06\x66iller\x18\x01 \x01(\x0b\x32\x16.caffe.FillerParameter\x12\x1d\n\x0e\x63hannel_shared\x18\x02 \x01(\x08:\x05\x66\x61lse\"!\n\x10PermuteParameter\x12\r\n\x05order\x18\x01 \x03(\r\"\xd1\x01\n\x11UpsampleParameter\x12\x12\n\x06height\x18\x01 \x01(\x05:\x02\x33\x32\x12\x11\n\x05width\x18\x02 \x01(\x05:\x02\x33\x32\x12\x17\n\x0cheight_scale\x18\x03 \x01(\x05:\x01\x32\x12\x16\n\x0bwidth_scale\x18\x04 \x01(\x05:\x01\x32\x12;\n\x04mode\x18\x05 \x01(\x0e\x32#.caffe.UpsampleParameter.UpsampleOp:\x08\x42ILINEAR\"\'\n\nUpsampleOp\x12\x0b\n\x07NEAREST\x10\x00\x12\x0c\n\x08\x42ILINEAR\x10\x01*\x1c\n\x05Phase\x12\t\n\x05TRAIN\x10\x00\x12\x08\n\x04TEST\x10\x01')

_PHASE = DESCRIPTOR.enum_types_by_name['Phase']
Phase = enum_type_wrapper.EnumTypeWrapper(_PHASE)
TRAIN = 0
TEST = 1


_BLOBSHAPE = DESCRIPTOR.message_types_by_name['BlobShape']
_BLOBPROTO = DESCRIPTOR.message_types_by_name['BlobProto']
_BLOBPROTOVECTOR = DESCRIPTOR.message_types_by_name['BlobProtoVector']
_DATUM = DESCRIPTOR.message_types_by_name['Datum']
_FILLERPARAMETER = DESCRIPTOR.message_types_by_name['FillerParameter']
_NETPARAMETER = DESCRIPTOR.message_types_by_name['NetParameter']
_SOLVERPARAMETER = DESCRIPTOR.message_types_by_name['SolverParameter']
_SOLVERSTATE = DESCRIPTOR.message_types_by_name['SolverState']
_NETSTATE = DESCRIPTOR.message_types_by_name['NetState']
_NETSTATERULE = DESCRIPTOR.message_types_by_name['NetStateRule']
_PARAMSPEC = DESCRIPTOR.message_types_by_name['ParamSpec']
_LAYERPARAMETER = DESCRIPTOR.message_types_by_name['LayerParameter']
_TRANSFORMATIONPARAMETER = DESCRIPTOR.message_types_by_name['TransformationParameter']
_LOSSPARAMETER = DESCRIPTOR.message_types_by_name['LossParameter']
_ACCURACYPARAMETER = DESCRIPTOR.message_types_by_name['AccuracyParameter']
_ARGMAXPARAMETER = DESCRIPTOR.message_types_by_name['ArgMaxParameter']
_CLIPPARAMETER = DESCRIPTOR.message_types_by_name['ClipParameter']
_CONCATPARAMETER = DESCRIPTOR.message_types_by_name['ConcatParameter']
_BATCHNORMPARAMETER = DESCRIPTOR.message_types_by_name['BatchNormParameter']
_BIASPARAMETER = DESCRIPTOR.message_types_by_name['BiasParameter']
_CONTRASTIVELOSSPARAMETER = DESCRIPTOR.message_types_by_name['ContrastiveLossParameter']
_CONVOLUTIONPARAMETER = DESCRIPTOR.message_types_by_name['ConvolutionParameter']
_CROPPARAMETER = DESCRIPTOR.message_types_by_name['CropParameter']
_DATAPARAMETER = DESCRIPTOR.message_types_by_name['DataParameter']
_DROPOUTPARAMETER = DESCRIPTOR.message_types_by_name['DropoutParameter']
_DUMMYDATAPARAMETER = DESCRIPTOR.message_types_by_name['DummyDataParameter']
_ELTWISEPARAMETER = DESCRIPTOR.message_types_by_name['EltwiseParameter']
_ELUPARAMETER = DESCRIPTOR.message_types_by_name['ELUParameter']
_EMBEDPARAMETER = DESCRIPTOR.message_types_by_name['EmbedParameter']
_EXPPARAMETER = DESCRIPTOR.message_types_by_name['ExpParameter']
_FLATTENPARAMETER = DESCRIPTOR.message_types_by_name['FlattenParameter']
_HDF5DATAPARAMETER = DESCRIPTOR.message_types_by_name['HDF5DataParameter']
_HDF5OUTPUTPARAMETER = DESCRIPTOR.message_types_by_name['HDF5OutputParameter']
_HINGELOSSPARAMETER = DESCRIPTOR.message_types_by_name['HingeLossParameter']
_IMAGEDATAPARAMETER = DESCRIPTOR.message_types_by_name['ImageDataParameter']
_INFOGAINLOSSPARAMETER = DESCRIPTOR.message_types_by_name['InfogainLossParameter']
_INNERPRODUCTPARAMETER = DESCRIPTOR.message_types_by_name['InnerProductParameter']
_INPUTPARAMETER = DESCRIPTOR.message_types_by_name['InputParameter']
_LOGPARAMETER = DESCRIPTOR.message_types_by_name['LogParameter']
_LRNPARAMETER = DESCRIPTOR.message_types_by_name['LRNParameter']
_MEMORYDATAPARAMETER = DESCRIPTOR.message_types_by_name['MemoryDataParameter']
_MVNPARAMETER = DESCRIPTOR.message_types_by_name['MVNParameter']
_PARAMETERPARAMETER = DESCRIPTOR.message_types_by_name['ParameterParameter']
_POOLINGPARAMETER = DESCRIPTOR.message_types_by_name['PoolingParameter']
_POWERPARAMETER = DESCRIPTOR.message_types_by_name['PowerParameter']
_PYTHONPARAMETER = DESCRIPTOR.message_types_by_name['PythonParameter']
_RECURRENTPARAMETER = DESCRIPTOR.message_types_by_name['RecurrentParameter']
_REDUCTIONPARAMETER = DESCRIPTOR.message_types_by_name['ReductionParameter']
_RELUPARAMETER = DESCRIPTOR.message_types_by_name['ReLUParameter']
_RESHAPEPARAMETER = DESCRIPTOR.message_types_by_name['ReshapeParameter']
_SCALEPARAMETER = DESCRIPTOR.message_types_by_name['ScaleParameter']
_SIGMOIDPARAMETER = DESCRIPTOR.message_types_by_name['SigmoidParameter']
_SLICEPARAMETER = DESCRIPTOR.message_types_by_name['SliceParameter']
_SOFTMAXPARAMETER = DESCRIPTOR.message_types_by_name['SoftmaxParameter']
_SWISHPARAMETER = DESCRIPTOR.message_types_by_name['SwishParameter']
_TANHPARAMETER = DESCRIPTOR.message_types_by_name['TanHParameter']
_TILEPARAMETER = DESCRIPTOR.message_types_by_name['TileParameter']
_THRESHOLDPARAMETER = DESCRIPTOR.message_types_by_name['ThresholdParameter']
_WINDOWDATAPARAMETER = DESCRIPTOR.message_types_by_name['WindowDataParameter']
_SPPPARAMETER = DESCRIPTOR.message_types_by_name['SPPParameter']
_V1LAYERPARAMETER = DESCRIPTOR.message_types_by_name['V1LayerParameter']
_V0LAYERPARAMETER = DESCRIPTOR.message_types_by_name['V0LayerParameter']
_PRELUPARAMETER = DESCRIPTOR.message_types_by_name['PReLUParameter']
_PERMUTEPARAMETER = DESCRIPTOR.message_types_by_name['PermuteParameter']
_UPSAMPLEPARAMETER = DESCRIPTOR.message_types_by_name['UpsampleParameter']
_FILLERPARAMETER_VARIANCENORM = _FILLERPARAMETER.enum_types_by_name['VarianceNorm']
_SOLVERPARAMETER_SNAPSHOTFORMAT = _SOLVERPARAMETER.enum_types_by_name['SnapshotFormat']
_SOLVERPARAMETER_SOLVERMODE = _SOLVERPARAMETER.enum_types_by_name['SolverMode']
_SOLVERPARAMETER_SOLVERTYPE = _SOLVERPARAMETER.enum_types_by_name['SolverType']
_PARAMSPEC_DIMCHECKMODE = _PARAMSPEC.enum_types_by_name['DimCheckMode']
_LOSSPARAMETER_NORMALIZATIONMODE = _LOSSPARAMETER.enum_types_by_name['NormalizationMode']
_CONVOLUTIONPARAMETER_ENGINE = _CONVOLUTIONPARAMETER.enum_types_by_name['Engine']
_DATAPARAMETER_DB = _DATAPARAMETER.enum_types_by_name['DB']
_ELTWISEPARAMETER_ELTWISEOP = _ELTWISEPARAMETER.enum_types_by_name['EltwiseOp']
_HINGELOSSPARAMETER_NORM = _HINGELOSSPARAMETER.enum_types_by_name['Norm']
_LRNPARAMETER_NORMREGION = _LRNPARAMETER.enum_types_by_name['NormRegion']
_LRNPARAMETER_ENGINE = _LRNPARAMETER.enum_types_by_name['Engine']
_POOLINGPARAMETER_POOLMETHOD = _POOLINGPARAMETER.enum_types_by_name['PoolMethod']
_POOLINGPARAMETER_ENGINE = _POOLINGPARAMETER.enum_types_by_name['Engine']
_POOLINGPARAMETER_ROUNDMODE = _POOLINGPARAMETER.enum_types_by_name['RoundMode']
_REDUCTIONPARAMETER_REDUCTIONOP = _REDUCTIONPARAMETER.enum_types_by_name['ReductionOp']
_RELUPARAMETER_ENGINE = _RELUPARAMETER.enum_types_by_name['Engine']
_SIGMOIDPARAMETER_ENGINE = _SIGMOIDPARAMETER.enum_types_by_name['Engine']
_SOFTMAXPARAMETER_ENGINE = _SOFTMAXPARAMETER.enum_types_by_name['Engine']
_TANHPARAMETER_ENGINE = _TANHPARAMETER.enum_types_by_name['Engine']
_SPPPARAMETER_POOLMETHOD = _SPPPARAMETER.enum_types_by_name['PoolMethod']
_SPPPARAMETER_ENGINE = _SPPPARAMETER.enum_types_by_name['Engine']
_V1LAYERPARAMETER_LAYERTYPE = _V1LAYERPARAMETER.enum_types_by_name['LayerType']
_V1LAYERPARAMETER_DIMCHECKMODE = _V1LAYERPARAMETER.enum_types_by_name['DimCheckMode']
_V0LAYERPARAMETER_POOLMETHOD = _V0LAYERPARAMETER.enum_types_by_name['PoolMethod']
_UPSAMPLEPARAMETER_UPSAMPLEOP = _UPSAMPLEPARAMETER.enum_types_by_name['UpsampleOp']
BlobShape = _reflection.GeneratedProtocolMessageType('BlobShape', (_message.Message,), {
  'DESCRIPTOR' : _BLOBSHAPE,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.BlobShape)
  })
_sym_db.RegisterMessage(BlobShape)

BlobProto = _reflection.GeneratedProtocolMessageType('BlobProto', (_message.Message,), {
  'DESCRIPTOR' : _BLOBPROTO,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.BlobProto)
  })
_sym_db.RegisterMessage(BlobProto)

BlobProtoVector = _reflection.GeneratedProtocolMessageType('BlobProtoVector', (_message.Message,), {
  'DESCRIPTOR' : _BLOBPROTOVECTOR,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.BlobProtoVector)
  })
_sym_db.RegisterMessage(BlobProtoVector)

Datum = _reflection.GeneratedProtocolMessageType('Datum', (_message.Message,), {
  'DESCRIPTOR' : _DATUM,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.Datum)
  })
_sym_db.RegisterMessage(Datum)

FillerParameter = _reflection.GeneratedProtocolMessageType('FillerParameter', (_message.Message,), {
  'DESCRIPTOR' : _FILLERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.FillerParameter)
  })
_sym_db.RegisterMessage(FillerParameter)

NetParameter = _reflection.GeneratedProtocolMessageType('NetParameter', (_message.Message,), {
  'DESCRIPTOR' : _NETPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.NetParameter)
  })
_sym_db.RegisterMessage(NetParameter)

SolverParameter = _reflection.GeneratedProtocolMessageType('SolverParameter', (_message.Message,), {
  'DESCRIPTOR' : _SOLVERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SolverParameter)
  })
_sym_db.RegisterMessage(SolverParameter)

SolverState = _reflection.GeneratedProtocolMessageType('SolverState', (_message.Message,), {
  'DESCRIPTOR' : _SOLVERSTATE,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SolverState)
  })
_sym_db.RegisterMessage(SolverState)

NetState = _reflection.GeneratedProtocolMessageType('NetState', (_message.Message,), {
  'DESCRIPTOR' : _NETSTATE,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.NetState)
  })
_sym_db.RegisterMessage(NetState)

NetStateRule = _reflection.GeneratedProtocolMessageType('NetStateRule', (_message.Message,), {
  'DESCRIPTOR' : _NETSTATERULE,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.NetStateRule)
  })
_sym_db.RegisterMessage(NetStateRule)

ParamSpec = _reflection.GeneratedProtocolMessageType('ParamSpec', (_message.Message,), {
  'DESCRIPTOR' : _PARAMSPEC,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ParamSpec)
  })
_sym_db.RegisterMessage(ParamSpec)

LayerParameter = _reflection.GeneratedProtocolMessageType('LayerParameter', (_message.Message,), {
  'DESCRIPTOR' : _LAYERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.LayerParameter)
  })
_sym_db.RegisterMessage(LayerParameter)

TransformationParameter = _reflection.GeneratedProtocolMessageType('TransformationParameter', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFORMATIONPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.TransformationParameter)
  })
_sym_db.RegisterMessage(TransformationParameter)

LossParameter = _reflection.GeneratedProtocolMessageType('LossParameter', (_message.Message,), {
  'DESCRIPTOR' : _LOSSPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.LossParameter)
  })
_sym_db.RegisterMessage(LossParameter)

AccuracyParameter = _reflection.GeneratedProtocolMessageType('AccuracyParameter', (_message.Message,), {
  'DESCRIPTOR' : _ACCURACYPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.AccuracyParameter)
  })
_sym_db.RegisterMessage(AccuracyParameter)

ArgMaxParameter = _reflection.GeneratedProtocolMessageType('ArgMaxParameter', (_message.Message,), {
  'DESCRIPTOR' : _ARGMAXPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ArgMaxParameter)
  })
_sym_db.RegisterMessage(ArgMaxParameter)

ClipParameter = _reflection.GeneratedProtocolMessageType('ClipParameter', (_message.Message,), {
  'DESCRIPTOR' : _CLIPPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ClipParameter)
  })
_sym_db.RegisterMessage(ClipParameter)

ConcatParameter = _reflection.GeneratedProtocolMessageType('ConcatParameter', (_message.Message,), {
  'DESCRIPTOR' : _CONCATPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ConcatParameter)
  })
_sym_db.RegisterMessage(ConcatParameter)

BatchNormParameter = _reflection.GeneratedProtocolMessageType('BatchNormParameter', (_message.Message,), {
  'DESCRIPTOR' : _BATCHNORMPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.BatchNormParameter)
  })
_sym_db.RegisterMessage(BatchNormParameter)

BiasParameter = _reflection.GeneratedProtocolMessageType('BiasParameter', (_message.Message,), {
  'DESCRIPTOR' : _BIASPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.BiasParameter)
  })
_sym_db.RegisterMessage(BiasParameter)

ContrastiveLossParameter = _reflection.GeneratedProtocolMessageType('ContrastiveLossParameter', (_message.Message,), {
  'DESCRIPTOR' : _CONTRASTIVELOSSPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ContrastiveLossParameter)
  })
_sym_db.RegisterMessage(ContrastiveLossParameter)

ConvolutionParameter = _reflection.GeneratedProtocolMessageType('ConvolutionParameter', (_message.Message,), {
  'DESCRIPTOR' : _CONVOLUTIONPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ConvolutionParameter)
  })
_sym_db.RegisterMessage(ConvolutionParameter)

CropParameter = _reflection.GeneratedProtocolMessageType('CropParameter', (_message.Message,), {
  'DESCRIPTOR' : _CROPPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.CropParameter)
  })
_sym_db.RegisterMessage(CropParameter)

DataParameter = _reflection.GeneratedProtocolMessageType('DataParameter', (_message.Message,), {
  'DESCRIPTOR' : _DATAPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.DataParameter)
  })
_sym_db.RegisterMessage(DataParameter)

DropoutParameter = _reflection.GeneratedProtocolMessageType('DropoutParameter', (_message.Message,), {
  'DESCRIPTOR' : _DROPOUTPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.DropoutParameter)
  })
_sym_db.RegisterMessage(DropoutParameter)

DummyDataParameter = _reflection.GeneratedProtocolMessageType('DummyDataParameter', (_message.Message,), {
  'DESCRIPTOR' : _DUMMYDATAPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.DummyDataParameter)
  })
_sym_db.RegisterMessage(DummyDataParameter)

EltwiseParameter = _reflection.GeneratedProtocolMessageType('EltwiseParameter', (_message.Message,), {
  'DESCRIPTOR' : _ELTWISEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.EltwiseParameter)
  })
_sym_db.RegisterMessage(EltwiseParameter)

ELUParameter = _reflection.GeneratedProtocolMessageType('ELUParameter', (_message.Message,), {
  'DESCRIPTOR' : _ELUPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ELUParameter)
  })
_sym_db.RegisterMessage(ELUParameter)

EmbedParameter = _reflection.GeneratedProtocolMessageType('EmbedParameter', (_message.Message,), {
  'DESCRIPTOR' : _EMBEDPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.EmbedParameter)
  })
_sym_db.RegisterMessage(EmbedParameter)

ExpParameter = _reflection.GeneratedProtocolMessageType('ExpParameter', (_message.Message,), {
  'DESCRIPTOR' : _EXPPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ExpParameter)
  })
_sym_db.RegisterMessage(ExpParameter)

FlattenParameter = _reflection.GeneratedProtocolMessageType('FlattenParameter', (_message.Message,), {
  'DESCRIPTOR' : _FLATTENPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.FlattenParameter)
  })
_sym_db.RegisterMessage(FlattenParameter)

HDF5DataParameter = _reflection.GeneratedProtocolMessageType('HDF5DataParameter', (_message.Message,), {
  'DESCRIPTOR' : _HDF5DATAPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.HDF5DataParameter)
  })
_sym_db.RegisterMessage(HDF5DataParameter)

HDF5OutputParameter = _reflection.GeneratedProtocolMessageType('HDF5OutputParameter', (_message.Message,), {
  'DESCRIPTOR' : _HDF5OUTPUTPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.HDF5OutputParameter)
  })
_sym_db.RegisterMessage(HDF5OutputParameter)

HingeLossParameter = _reflection.GeneratedProtocolMessageType('HingeLossParameter', (_message.Message,), {
  'DESCRIPTOR' : _HINGELOSSPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.HingeLossParameter)
  })
_sym_db.RegisterMessage(HingeLossParameter)

ImageDataParameter = _reflection.GeneratedProtocolMessageType('ImageDataParameter', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEDATAPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ImageDataParameter)
  })
_sym_db.RegisterMessage(ImageDataParameter)

InfogainLossParameter = _reflection.GeneratedProtocolMessageType('InfogainLossParameter', (_message.Message,), {
  'DESCRIPTOR' : _INFOGAINLOSSPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.InfogainLossParameter)
  })
_sym_db.RegisterMessage(InfogainLossParameter)

InnerProductParameter = _reflection.GeneratedProtocolMessageType('InnerProductParameter', (_message.Message,), {
  'DESCRIPTOR' : _INNERPRODUCTPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.InnerProductParameter)
  })
_sym_db.RegisterMessage(InnerProductParameter)

InputParameter = _reflection.GeneratedProtocolMessageType('InputParameter', (_message.Message,), {
  'DESCRIPTOR' : _INPUTPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.InputParameter)
  })
_sym_db.RegisterMessage(InputParameter)

LogParameter = _reflection.GeneratedProtocolMessageType('LogParameter', (_message.Message,), {
  'DESCRIPTOR' : _LOGPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.LogParameter)
  })
_sym_db.RegisterMessage(LogParameter)

LRNParameter = _reflection.GeneratedProtocolMessageType('LRNParameter', (_message.Message,), {
  'DESCRIPTOR' : _LRNPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.LRNParameter)
  })
_sym_db.RegisterMessage(LRNParameter)

MemoryDataParameter = _reflection.GeneratedProtocolMessageType('MemoryDataParameter', (_message.Message,), {
  'DESCRIPTOR' : _MEMORYDATAPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.MemoryDataParameter)
  })
_sym_db.RegisterMessage(MemoryDataParameter)

MVNParameter = _reflection.GeneratedProtocolMessageType('MVNParameter', (_message.Message,), {
  'DESCRIPTOR' : _MVNPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.MVNParameter)
  })
_sym_db.RegisterMessage(MVNParameter)

ParameterParameter = _reflection.GeneratedProtocolMessageType('ParameterParameter', (_message.Message,), {
  'DESCRIPTOR' : _PARAMETERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ParameterParameter)
  })
_sym_db.RegisterMessage(ParameterParameter)

PoolingParameter = _reflection.GeneratedProtocolMessageType('PoolingParameter', (_message.Message,), {
  'DESCRIPTOR' : _POOLINGPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.PoolingParameter)
  })
_sym_db.RegisterMessage(PoolingParameter)

PowerParameter = _reflection.GeneratedProtocolMessageType('PowerParameter', (_message.Message,), {
  'DESCRIPTOR' : _POWERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.PowerParameter)
  })
_sym_db.RegisterMessage(PowerParameter)

PythonParameter = _reflection.GeneratedProtocolMessageType('PythonParameter', (_message.Message,), {
  'DESCRIPTOR' : _PYTHONPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.PythonParameter)
  })
_sym_db.RegisterMessage(PythonParameter)

RecurrentParameter = _reflection.GeneratedProtocolMessageType('RecurrentParameter', (_message.Message,), {
  'DESCRIPTOR' : _RECURRENTPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.RecurrentParameter)
  })
_sym_db.RegisterMessage(RecurrentParameter)

ReductionParameter = _reflection.GeneratedProtocolMessageType('ReductionParameter', (_message.Message,), {
  'DESCRIPTOR' : _REDUCTIONPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ReductionParameter)
  })
_sym_db.RegisterMessage(ReductionParameter)

ReLUParameter = _reflection.GeneratedProtocolMessageType('ReLUParameter', (_message.Message,), {
  'DESCRIPTOR' : _RELUPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ReLUParameter)
  })
_sym_db.RegisterMessage(ReLUParameter)

ReshapeParameter = _reflection.GeneratedProtocolMessageType('ReshapeParameter', (_message.Message,), {
  'DESCRIPTOR' : _RESHAPEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ReshapeParameter)
  })
_sym_db.RegisterMessage(ReshapeParameter)

ScaleParameter = _reflection.GeneratedProtocolMessageType('ScaleParameter', (_message.Message,), {
  'DESCRIPTOR' : _SCALEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ScaleParameter)
  })
_sym_db.RegisterMessage(ScaleParameter)

SigmoidParameter = _reflection.GeneratedProtocolMessageType('SigmoidParameter', (_message.Message,), {
  'DESCRIPTOR' : _SIGMOIDPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SigmoidParameter)
  })
_sym_db.RegisterMessage(SigmoidParameter)

SliceParameter = _reflection.GeneratedProtocolMessageType('SliceParameter', (_message.Message,), {
  'DESCRIPTOR' : _SLICEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SliceParameter)
  })
_sym_db.RegisterMessage(SliceParameter)

SoftmaxParameter = _reflection.GeneratedProtocolMessageType('SoftmaxParameter', (_message.Message,), {
  'DESCRIPTOR' : _SOFTMAXPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SoftmaxParameter)
  })
_sym_db.RegisterMessage(SoftmaxParameter)

SwishParameter = _reflection.GeneratedProtocolMessageType('SwishParameter', (_message.Message,), {
  'DESCRIPTOR' : _SWISHPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SwishParameter)
  })
_sym_db.RegisterMessage(SwishParameter)

TanHParameter = _reflection.GeneratedProtocolMessageType('TanHParameter', (_message.Message,), {
  'DESCRIPTOR' : _TANHPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.TanHParameter)
  })
_sym_db.RegisterMessage(TanHParameter)

TileParameter = _reflection.GeneratedProtocolMessageType('TileParameter', (_message.Message,), {
  'DESCRIPTOR' : _TILEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.TileParameter)
  })
_sym_db.RegisterMessage(TileParameter)

ThresholdParameter = _reflection.GeneratedProtocolMessageType('ThresholdParameter', (_message.Message,), {
  'DESCRIPTOR' : _THRESHOLDPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.ThresholdParameter)
  })
_sym_db.RegisterMessage(ThresholdParameter)

WindowDataParameter = _reflection.GeneratedProtocolMessageType('WindowDataParameter', (_message.Message,), {
  'DESCRIPTOR' : _WINDOWDATAPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.WindowDataParameter)
  })
_sym_db.RegisterMessage(WindowDataParameter)

SPPParameter = _reflection.GeneratedProtocolMessageType('SPPParameter', (_message.Message,), {
  'DESCRIPTOR' : _SPPPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.SPPParameter)
  })
_sym_db.RegisterMessage(SPPParameter)

V1LayerParameter = _reflection.GeneratedProtocolMessageType('V1LayerParameter', (_message.Message,), {
  'DESCRIPTOR' : _V1LAYERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.V1LayerParameter)
  })
_sym_db.RegisterMessage(V1LayerParameter)

V0LayerParameter = _reflection.GeneratedProtocolMessageType('V0LayerParameter', (_message.Message,), {
  'DESCRIPTOR' : _V0LAYERPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.V0LayerParameter)
  })
_sym_db.RegisterMessage(V0LayerParameter)

PReLUParameter = _reflection.GeneratedProtocolMessageType('PReLUParameter', (_message.Message,), {
  'DESCRIPTOR' : _PRELUPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.PReLUParameter)
  })
_sym_db.RegisterMessage(PReLUParameter)

PermuteParameter = _reflection.GeneratedProtocolMessageType('PermuteParameter', (_message.Message,), {
  'DESCRIPTOR' : _PERMUTEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.PermuteParameter)
  })
_sym_db.RegisterMessage(PermuteParameter)

UpsampleParameter = _reflection.GeneratedProtocolMessageType('UpsampleParameter', (_message.Message,), {
  'DESCRIPTOR' : _UPSAMPLEPARAMETER,
  '__module__' : 'caffe_pb2'
  # @@protoc_insertion_point(class_scope:caffe.UpsampleParameter)
  })
_sym_db.RegisterMessage(UpsampleParameter)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BLOBSHAPE.fields_by_name['dim']._options = None
  _BLOBSHAPE.fields_by_name['dim']._serialized_options = b'\020\001'
  _BLOBPROTO.fields_by_name['data']._options = None
  _BLOBPROTO.fields_by_name['data']._serialized_options = b'\020\001'
  _BLOBPROTO.fields_by_name['diff']._options = None
  _BLOBPROTO.fields_by_name['diff']._serialized_options = b'\020\001'
  _BLOBPROTO.fields_by_name['double_data']._options = None
  _BLOBPROTO.fields_by_name['double_data']._serialized_options = b'\020\001'
  _BLOBPROTO.fields_by_name['double_diff']._options = None
  _BLOBPROTO.fields_by_name['double_diff']._serialized_options = b'\020\001'
  _PHASE._serialized_start=16028
  _PHASE._serialized_end=16056
  _BLOBSHAPE._serialized_start=22
  _BLOBSHAPE._serialized_end=50
  _BLOBPROTO._serialized_start=53
  _BLOBPROTO._serialized_end=257
  _BLOBPROTOVECTOR._serialized_start=259
  _BLOBPROTOVECTOR._serialized_end=309
  _DATUM._serialized_start=312
  _DATUM._serialized_end=441
  _FILLERPARAMETER._serialized_start=444
  _FILLERPARAMETER._serialized_end=710
  _FILLERPARAMETER_VARIANCENORM._serialized_start=658
  _FILLERPARAMETER_VARIANCENORM._serialized_end=710
  _NETPARAMETER._serialized_start=713
  _NETPARAMETER._serialized_end=983
  _SOLVERPARAMETER._serialized_start=986
  _SOLVERPARAMETER._serialized_end=2350
  _SOLVERPARAMETER_SNAPSHOTFORMAT._serialized_start=2188
  _SOLVERPARAMETER_SNAPSHOTFORMAT._serialized_end=2231
  _SOLVERPARAMETER_SOLVERMODE._serialized_start=2233
  _SOLVERPARAMETER_SOLVERMODE._serialized_end=2263
  _SOLVERPARAMETER_SOLVERTYPE._serialized_start=2265
  _SOLVERPARAMETER_SOLVERTYPE._serialized_end=2350
  _SOLVERSTATE._serialized_start=2352
  _SOLVERSTATE._serialized_end=2460
  _NETSTATE._serialized_start=2462
  _NETSTATE._serialized_end=2540
  _NETSTATERULE._serialized_start=2542
  _NETSTATERULE._serialized_end=2657
  _PARAMSPEC._serialized_start=2660
  _PARAMSPEC._serialized_end=2823
  _PARAMSPEC_DIMCHECKMODE._serialized_start=2781
  _PARAMSPEC_DIMCHECKMODE._serialized_end=2823
  _LAYERPARAMETER._serialized_start=2826
  _LAYERPARAMETER._serialized_end=5576
  _TRANSFORMATIONPARAMETER._serialized_start=5579
  _TRANSFORMATIONPARAMETER._serialized_end=5761
  _LOSSPARAMETER._serialized_start=5764
  _LOSSPARAMETER._serialized_end=5958
  _LOSSPARAMETER_NORMALIZATIONMODE._serialized_start=5892
  _LOSSPARAMETER_NORMALIZATIONMODE._serialized_end=5958
  _ACCURACYPARAMETER._serialized_start=5960
  _ACCURACYPARAMETER._serialized_end=6036
  _ARGMAXPARAMETER._serialized_start=6038
  _ARGMAXPARAMETER._serialized_end=6115
  _CLIPPARAMETER._serialized_start=6117
  _CLIPPARAMETER._serialized_end=6158
  _CONCATPARAMETER._serialized_start=6160
  _CONCATPARAMETER._serialized_end=6217
  _BATCHNORMPARAMETER._serialized_start=6219
  _BATCHNORMPARAMETER._serialized_end=6325
  _BIASPARAMETER._serialized_start=6327
  _BIASPARAMETER._serialized_end=6420
  _CONTRASTIVELOSSPARAMETER._serialized_start=6422
  _CONTRASTIVELOSSPARAMETER._serialized_end=6498
  _CONVOLUTIONPARAMETER._serialized_start=6501
  _CONVOLUTIONPARAMETER._serialized_end=7009
  _CONVOLUTIONPARAMETER_ENGINE._serialized_start=6966
  _CONVOLUTIONPARAMETER_ENGINE._serialized_end=7009
  _CROPPARAMETER._serialized_start=7011
  _CROPPARAMETER._serialized_end=7059
  _DATAPARAMETER._serialized_start=7062
  _DATAPARAMETER._serialized_end=7354
  _DATAPARAMETER_DB._serialized_start=7327
  _DATAPARAMETER_DB._serialized_end=7354
  _DROPOUTPARAMETER._serialized_start=7356
  _DROPOUTPARAMETER._serialized_end=7402
  _DUMMYDATAPARAMETER._serialized_start=7405
  _DUMMYDATAPARAMETER._serialized_end=7565
  _ELTWISEPARAMETER._serialized_start=7568
  _ELTWISEPARAMETER._serialized_end=7733
  _ELTWISEPARAMETER_ELTWISEOP._serialized_start=7694
  _ELTWISEPARAMETER_ELTWISEOP._serialized_end=7733
  _ELUPARAMETER._serialized_start=7735
  _ELUPARAMETER._serialized_end=7767
  _EMBEDPARAMETER._serialized_start=7770
  _EMBEDPARAMETER._serialized_end=7942
  _EXPPARAMETER._serialized_start=7944
  _EXPPARAMETER._serialized_end=8012
  _FLATTENPARAMETER._serialized_start=8014
  _FLATTENPARAMETER._serialized_end=8071
  _HDF5DATAPARAMETER._serialized_start=8073
  _HDF5DATAPARAMETER._serialized_end=8152
  _HDF5OUTPUTPARAMETER._serialized_start=8154
  _HDF5OUTPUTPARAMETER._serialized_end=8194
  _HINGELOSSPARAMETER._serialized_start=8196
  _HINGELOSSPARAMETER._serialized_end=8290
  _HINGELOSSPARAMETER_NORM._serialized_start=8268
  _HINGELOSSPARAMETER_NORM._serialized_end=8290
  _IMAGEDATAPARAMETER._serialized_start=8293
  _IMAGEDATAPARAMETER._serialized_end=8572
  _INFOGAINLOSSPARAMETER._serialized_start=8574
  _INFOGAINLOSSPARAMETER._serialized_end=8630
  _INNERPRODUCTPARAMETER._serialized_start=8633
  _INNERPRODUCTPARAMETER._serialized_end=8836
  _INPUTPARAMETER._serialized_start=8838
  _INPUTPARAMETER._serialized_end=8887
  _LOGPARAMETER._serialized_start=8889
  _LOGPARAMETER._serialized_end=8957
  _LRNPARAMETER._serialized_start=8960
  _LRNPARAMETER._serialized_end=9272
  _LRNPARAMETER_NORMREGION._serialized_start=9174
  _LRNPARAMETER_NORMREGION._serialized_end=9227
  _LRNPARAMETER_ENGINE._serialized_start=6966
  _LRNPARAMETER_ENGINE._serialized_end=7009
  _MEMORYDATAPARAMETER._serialized_start=9274
  _MEMORYDATAPARAMETER._serialized_end=9364
  _MVNPARAMETER._serialized_start=9366
  _MVNPARAMETER._serialized_end=9466
  _PARAMETERPARAMETER._serialized_start=9468
  _PARAMETERPARAMETER._serialized_end=9521
  _POOLINGPARAMETER._serialized_start=9524
  _POOLINGPARAMETER._serialized_end=10037
  _POOLINGPARAMETER_POOLMETHOD._serialized_start=9912
  _POOLINGPARAMETER_POOLMETHOD._serialized_end=9958
  _POOLINGPARAMETER_ENGINE._serialized_start=6966
  _POOLINGPARAMETER_ENGINE._serialized_end=7009
  _POOLINGPARAMETER_ROUNDMODE._serialized_start=10005
  _POOLINGPARAMETER_ROUNDMODE._serialized_end=10037
  _POWERPARAMETER._serialized_start=10039
  _POWERPARAMETER._serialized_end=10109
  _PYTHONPARAMETER._serialized_start=10111
  _PYTHONPARAMETER._serialized_end=10214
  _RECURRENTPARAMETER._serialized_start=10217
  _RECURRENTPARAMETER._serialized_end=10409
  _REDUCTIONPARAMETER._serialized_start=10412
  _REDUCTIONPARAMETER._serialized_end=10585
  _REDUCTIONPARAMETER_REDUCTIONOP._serialized_start=10532
  _REDUCTIONPARAMETER_REDUCTIONOP._serialized_end=10585
  _RELUPARAMETER._serialized_start=10588
  _RELUPARAMETER._serialized_end=10729
  _RELUPARAMETER_ENGINE._serialized_start=6966
  _RELUPARAMETER_ENGINE._serialized_end=7009
  _RESHAPEPARAMETER._serialized_start=10731
  _RESHAPEPARAMETER._serialized_end=10821
  _SCALEPARAMETER._serialized_start=10824
  _SCALEPARAMETER._serialized_end=10989
  _SIGMOIDPARAMETER._serialized_start=10991
  _SIGMOIDPARAMETER._serialized_end=11111
  _SIGMOIDPARAMETER_ENGINE._serialized_start=6966
  _SIGMOIDPARAMETER_ENGINE._serialized_end=7009
  _SLICEPARAMETER._serialized_start=11113
  _SLICEPARAMETER._serialized_end=11189
  _SOFTMAXPARAMETER._serialized_start=11192
  _SOFTMAXPARAMETER._serialized_end=11329
  _SOFTMAXPARAMETER_ENGINE._serialized_start=6966
  _SOFTMAXPARAMETER_ENGINE._serialized_end=7009
  _SWISHPARAMETER._serialized_start=11331
  _SWISHPARAMETER._serialized_end=11364
  _TANHPARAMETER._serialized_start=11366
  _TANHPARAMETER._serialized_end=11480
  _TANHPARAMETER_ENGINE._serialized_start=6966
  _TANHPARAMETER_ENGINE._serialized_end=7009
  _TILEPARAMETER._serialized_start=11482
  _TILEPARAMETER._serialized_end=11529
  _THRESHOLDPARAMETER._serialized_start=11531
  _THRESHOLDPARAMETER._serialized_end=11573
  _WINDOWDATAPARAMETER._serialized_start=11576
  _WINDOWDATAPARAMETER._serialized_end=11897
  _SPPPARAMETER._serialized_start=11900
  _SPPPARAMETER._serialized_end=12135
  _SPPPARAMETER_POOLMETHOD._serialized_start=9912
  _SPPPARAMETER_POOLMETHOD._serialized_end=9958
  _SPPPARAMETER_ENGINE._serialized_start=6966
  _SPPPARAMETER_ENGINE._serialized_end=7009
  _V1LAYERPARAMETER._serialized_start=12138
  _V1LAYERPARAMETER._serialized_end=14666
  _V1LAYERPARAMETER_LAYERTYPE._serialized_start=14022
  _V1LAYERPARAMETER_LAYERTYPE._serialized_end=14622
  _V1LAYERPARAMETER_DIMCHECKMODE._serialized_start=2781
  _V1LAYERPARAMETER_DIMCHECKMODE._serialized_end=2823
  _V0LAYERPARAMETER._serialized_start=14669
  _V0LAYERPARAMETER._serialized_end=15690
  _V0LAYERPARAMETER_POOLMETHOD._serialized_start=9912
  _V0LAYERPARAMETER_POOLMETHOD._serialized_end=9958
  _PRELUPARAMETER._serialized_start=15692
  _PRELUPARAMETER._serialized_end=15779
  _PERMUTEPARAMETER._serialized_start=15781
  _PERMUTEPARAMETER._serialized_end=15814
  _UPSAMPLEPARAMETER._serialized_start=15817
  _UPSAMPLEPARAMETER._serialized_end=16026
  _UPSAMPLEPARAMETER_UPSAMPLEOP._serialized_start=15987
  _UPSAMPLEPARAMETER_UPSAMPLEOP._serialized_end=16026
# @@protoc_insertion_point(module_scope)
